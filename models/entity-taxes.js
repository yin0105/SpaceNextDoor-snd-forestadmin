// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const EntityTaxes = sequelize.define('entityTaxes', {
    createdBy: {
      type: DataTypes.INTEGER,
    },
    updatedBy: {
      type: DataTypes.INTEGER,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
  }, {
    tableName: 'entity_taxes',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  EntityTaxes.associate = (models) => {
    EntityTaxes.belongsTo(models.platformInsurances, {
      foreignKey: {
        name: 'insuranceIdKey',
        field: 'insurance_id',
      },
      as: 'insurance',
    });
    EntityTaxes.belongsTo(models.platformServices, {
      foreignKey: {
        name: 'serviceIdKey',
        field: 'service_id',
      },
      as: 'service',
    });
    EntityTaxes.belongsTo(models.sites, {
      foreignKey: {
        name: 'siteIdKey',
        field: 'site_id',
      },
      as: 'site',
    });
    EntityTaxes.belongsTo(models.platformTaxes, {
      foreignKey: {
        name: 'taxIdKey',
        field: 'tax_id',
      },
      as: 'tax',
    });
  };

  return EntityTaxes;
};
