// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const PlatformSpaceTypes = sequelize.define('platformSpaceTypes', {
    sizeFrom: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    sizeTo: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    unit: {
      type: DataTypes.ENUM(
        'sqm',
        'sqft',
      ),
      allowNull: false,
    },
    nameEn: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    nameTh: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    nameJp: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    nameKr: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    slug: {
      type: DataTypes.STRING,
    },
    icon: {
      type: DataTypes.STRING,
    },
    size: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    createdBy: {
      type: DataTypes.INTEGER,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
  }, {
    tableName: 'platform_space_types',
    underscored: true,
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  PlatformSpaceTypes.associate = (models) => {
    PlatformSpaceTypes.belongsTo(models.countries, {
      foreignKey: {
        name: 'countryIdKey',
        field: 'country_id',
      },
      as: 'country',
    });
    PlatformSpaceTypes.hasMany(models.spaces, {
      foreignKey: {
        name: 'platformSpaceTypeIdKey',
        field: 'platform_space_type_id',
      },
      as: 'platformSpaceTypeSpaces',
    });
  };

  return PlatformSpaceTypes;
};
