// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const PlatformTaxes = sequelize.define('platformTaxes', {
    nameEn: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    nameTh: {
      type: DataTypes.STRING,
    },
    nameJp: {
      type: DataTypes.STRING,
    },
    nameKr: {
      type: DataTypes.STRING,
    },
    descriptionEn: {
      type: DataTypes.STRING,
    },
    descriptionTh: {
      type: DataTypes.STRING,
    },
    descriptionJp: {
      type: DataTypes.STRING,
    },
    descriptionKr: {
      type: DataTypes.STRING,
    },
    type: {
      type: DataTypes.ENUM(
        'ABSOLUTE',
        'PERCENTAGE',
      ),
      defaultValue: "PERCENTAGE",
      allowNull: false,
    },
    value: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    entityType: {
      type: DataTypes.ENUM(
        'SITE',
        'INSURANCE',
        'SERVICE',
      ),
      allowNull: false,
    },
    exemptible: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    isDefault: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    isActive: {
      type: DataTypes.BOOLEAN,
      defaultValue: true,
    },
    createdBy: {
      type: DataTypes.INTEGER,
    },
    updatedBy: {
      type: DataTypes.INTEGER,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
  }, {
    tableName: 'platform_taxes',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  PlatformTaxes.associate = (models) => {
    PlatformTaxes.belongsTo(models.cities, {
      foreignKey: {
        name: 'cityIdKey',
        field: 'city_id',
      },
      as: 'city',
    });
    PlatformTaxes.belongsTo(models.countries, {
      foreignKey: {
        name: 'countryIdKey',
        field: 'country_id',
      },
      as: 'country',
    });
    PlatformTaxes.hasMany(models.appliedTaxes, {
      foreignKey: {
        name: 'taxIdKey',
        field: 'tax_id',
      },
      as: 'taxAppliedTaxes',
    });
    PlatformTaxes.hasMany(models.entityTaxes, {
      foreignKey: {
        name: 'taxIdKey',
        field: 'tax_id',
      },
      as: 'taxEntityTaxes',
    });
  };

  return PlatformTaxes;
};
