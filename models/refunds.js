// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Refunds = sequelize.define('refunds', {
    refundedAmount: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    refundedDate: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
      allowNull: false,
    },
    penaltyPercent: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    stripeRefundId: {
      type: DataTypes.STRING,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('now()'),
    },
    type: {
      type: DataTypes.ENUM(
        'REFUND_CANCEL_BOOKING',
        'REFUND_DEPOSIT',
        'REFUND_UNUSED_DAYS',
      ),
      defaultValue: "REFUND_CANCEL_BOOKING",
      allowNull: false,
    },
  }, {
    tableName: 'refunds',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Refunds.associate = (models) => {
    Refunds.belongsTo(models.bookings, {
      foreignKey: {
        name: 'bookingIdKey',
        field: 'booking_id',
      },
      as: 'booking',
    });
    Refunds.hasMany(models.transactions, {
      foreignKey: {
        name: 'refundIdKey',
        field: 'refund_id',
      },
      as: 'transactions',
    });
  };

  return Refunds;
};
